// Generated by delombok at Thu Jun 14 14:59:05 CEST 2018
package jigsawtest.demo;

public class Customer {
  private String title;
  private String forname;
  private String name;
  private String gender;
  private String address;


  @SuppressWarnings("all")
  public static class CustomerBuilder {
    @SuppressWarnings("all")
    private String title;
    @SuppressWarnings("all")
    private String forname;
    @SuppressWarnings("all")
    private String name;
    @SuppressWarnings("all")
    private String gender;
    @SuppressWarnings("all")
    private String address;

    @SuppressWarnings("all")
    CustomerBuilder() {
    }

    @SuppressWarnings("all")
    public CustomerBuilder title(final String title) {
      this.title = title;
      return this;
    }

    @SuppressWarnings("all")
    public CustomerBuilder forname(final String forname) {
      this.forname = forname;
      return this;
    }

    @SuppressWarnings("all")
    public CustomerBuilder name(final String name) {
      this.name = name;
      return this;
    }

    @SuppressWarnings("all")
    public CustomerBuilder gender(final String gender) {
      this.gender = gender;
      return this;
    }

    @SuppressWarnings("all")
    public CustomerBuilder address(final String address) {
      this.address = address;
      return this;
    }

    @SuppressWarnings("all")
    public Customer build() {
      return new Customer(title, forname, name, gender, address);
    }

    @Override
    @SuppressWarnings("all")
    public String toString() {
      return "Customer.CustomerBuilder(title=" + this.title + ", forname=" + this.forname + ", name=" + this.name + ", gender=" + this.gender + ", address=" + this.address + ")";
    }
  }

  @SuppressWarnings("all")
  public static CustomerBuilder builder() {
    return new CustomerBuilder();
  }

  @SuppressWarnings("all")
  public Customer() {
  }

  @SuppressWarnings("all")
  public Customer(final String title, final String forname, final String name, final String gender, final String address) {
    this.title = title;
    this.forname = forname;
    this.name = name;
    this.gender = gender;
    this.address = address;
  }

  @SuppressWarnings("all")
  public String getTitle() {
    return this.title;
  }

  @SuppressWarnings("all")
  public String getForname() {
    return this.forname;
  }

  @SuppressWarnings("all")
  public String getName() {
    return this.name;
  }

  @SuppressWarnings("all")
  public String getGender() {
    return this.gender;
  }

  @SuppressWarnings("all")
  public String getAddress() {
    return this.address;
  }

  @SuppressWarnings("all")
  public void setTitle(final String title) {
    this.title = title;
  }

  @SuppressWarnings("all")
  public void setForname(final String forname) {
    this.forname = forname;
  }

  @SuppressWarnings("all")
  public void setName(final String name) {
    this.name = name;
  }

  @SuppressWarnings("all")
  public void setGender(final String gender) {
    this.gender = gender;
  }

  @SuppressWarnings("all")
  public void setAddress(final String address) {
    this.address = address;
  }

  @Override
  @SuppressWarnings("all")
  public boolean equals(final Object o) {
    if (o == this) return true;
    if (!(o instanceof Customer)) return false;
    final Customer other = (Customer) o;
    if (!other.canEqual((Object) this)) return false;
    final Object this$title = this.getTitle();
    final Object other$title = other.getTitle();
    if (this$title == null ? other$title != null : !this$title.equals(other$title)) return false;
    final Object this$forname = this.getForname();
    final Object other$forname = other.getForname();
    if (this$forname == null ? other$forname != null : !this$forname.equals(other$forname)) return false;
    final Object this$name = this.getName();
    final Object other$name = other.getName();
    if (this$name == null ? other$name != null : !this$name.equals(other$name)) return false;
    final Object this$gender = this.getGender();
    final Object other$gender = other.getGender();
    if (this$gender == null ? other$gender != null : !this$gender.equals(other$gender)) return false;
    final Object this$address = this.getAddress();
    final Object other$address = other.getAddress();
    if (this$address == null ? other$address != null : !this$address.equals(other$address)) return false;
    return true;
  }

  @SuppressWarnings("all")
  protected boolean canEqual(final Object other) {
    return other instanceof Customer;
  }

  @Override
  @SuppressWarnings("all")
  public int hashCode() {
    final int PRIME = 59;
    int result = 1;
    final Object $title = this.getTitle();
    result = result * PRIME + ($title == null ? 43 : $title.hashCode());
    final Object $forname = this.getForname();
    result = result * PRIME + ($forname == null ? 43 : $forname.hashCode());
    final Object $name = this.getName();
    result = result * PRIME + ($name == null ? 43 : $name.hashCode());
    final Object $gender = this.getGender();
    result = result * PRIME + ($gender == null ? 43 : $gender.hashCode());
    final Object $address = this.getAddress();
    result = result * PRIME + ($address == null ? 43 : $address.hashCode());
    return result;
  }

  @Override
  @SuppressWarnings("all")
  public String toString() {
    return "Customer(title=" + this.getTitle() + ", forname=" + this.getForname() + ", name=" + this.getName() + ", gender=" + this.getGender() + ", address=" + this.getAddress() + ")";
  }
}
